import hashlib


def hashGenerator(data):
  res=hashlib.sha256(data.encode()).hexdigest()
  return res
class Block:
  def __init__(self,data, hash,prev_hash):
    self.data=data
    self.hash=hash
    self.prev_hash=prev_hash

class Blockchain:
  def __init__(self):
    hashLast=hashGenerator('gen_last')
    hashStart=hashGenerator('gen_hash')

    #genesis is the pehla block that is created
    genesis=Block('gen_data',hashStart,hashLast)
    self.chain=[genesis]
    #yeh genesis iss array k part bn gya h

  def add_block(self,data):
    prev_hash=self.chain[-1].hash
    #abhi -1 last wale index ko point kr rha hoga i.e. 
    hash1=hashGenerator(data+prev_hash)
    #data + prev_hash ko concatenate kiya taaki jo hash generate ho voh unique ho
    
    block=Block(data,hash1,prev_hash)
    self.chain.append(block)

#jo class banayi h usko use krenge
bc= Blockchain()
bc.add_block('1')
bc.add_block('2')
bc.add_block('3')
bc.add_block('4')

for block in bc.chain:
  print(block.__dict__)
